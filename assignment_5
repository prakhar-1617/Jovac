import 'package:flutter/material.dart';

void main() {
  runApp(const MaterialApp(
    debugShowCheckedModeBanner: false,
    home: FeedbackForm(),
  ));
}

class FeedbackForm extends StatefulWidget {
  const FeedbackForm({Key? key}) : super(key: key);

  @override
  State<FeedbackForm> createState() => _FeedbackFormState();
}

class _FeedbackFormState extends State<FeedbackForm> {
  final TextEditingController nameController = TextEditingController();
  final TextEditingController rollController = TextEditingController();
  final TextEditingController feedbackController = TextEditingController();
  double rating = 5;
  String selectedCategory = '';
  List<String> likedFeatures = [];
  bool agree = false;

  final List<String> categories = ['UI', 'Performance', 'Bugs', 'Suggestions'];

  final List<String> features = [
    'Easy to Use',
    'Design',
    'Speed',
    'Support',
  ];

  void handleSubmit() {
    if (!agree) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('You must agree to the terms.')),
      );
      return;
    }

    print('Name: ${nameController.text}');
    print('Roll Number: ${rollController.text}');
    print('Feedback: ${feedbackController.text}');
    print('Rating: $rating');
    print('Category: $selectedCategory');
    print('Liked Features: $likedFeatures');

    ScaffoldMessenger.of(context).showSnackBar(
      const SnackBar(content: Text('Feedback submitted successfully!')),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        leading: const Icon(Icons.arrow_back),
        title: const Text('Flutter Feedback Form'),
        backgroundColor: Colors.white,
        foregroundColor: Colors.black,
        elevation: 0.5,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: SingleChildScrollView(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              buildTextField('Name', nameController),
              const SizedBox(height: 16),
              buildTextField('Roll Number', rollController),
              const SizedBox(height: 16),
              const Text('Enter your feedback...'),
              const SizedBox(height: 8),
              buildTextArea(feedbackController),
              const SizedBox(height: 20),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  const Text('Rate your experience'),
                  Text(rating.toInt().toString()),
                ],
              ),
              Slider(
                value: rating,
                min: 0,
                max: 10,
                divisions: 10,
                label: rating.toString(),
                onChanged: (value) {
                  setState(() {
                    rating = value;
                  });
                },
              ),
              const SizedBox(height: 10),
              const Text('Select a category'),
              const SizedBox(height: 8),
              DropdownButtonFormField<String>(
                value: selectedCategory.isEmpty ? null : selectedCategory,
                decoration: InputDecoration(
                  filled: true,
                  fillColor: Colors.grey.shade200,
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                ),
                hint: const Text('Choose a category'),
                items: categories.map((String value) {
                  return DropdownMenuItem(
                    value: value,
                    child: Text(value),
                  );
                }).toList(),
                onChanged: (newValue) {
                  setState(() {
                    selectedCategory = newValue!;
                  });
                },
              ),
              const SizedBox(height: 24),
              const Text(
                'What features did you like?',
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
              ),
              ...features.map((feature) {
                return CheckboxListTile(
                  title: Text(feature),
                  value: likedFeatures.contains(feature),
                  onChanged: (bool? value) {
                    setState(() {
                      if (value == true) {
                        likedFeatures.add(feature);
                      } else {
                        likedFeatures.remove(feature);
                      }
                    });
                  },
                );
              }).toList(),
              CheckboxListTile(
                title: const Text('I agree to the terms and conditions'),
                value: agree,
                onChanged: (bool? value) {
                  setState(() {
                    agree = value ?? false;
                  });
                },
              ),
              const SizedBox(height: 12),
              SizedBox(
                width: double.infinity,
                height: 48,
                child: ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.blue,
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(12),
                    ),
                  ),
                  onPressed: handleSubmit,
                  child: const Text('Submit'),
                ),
              )
            ],
          ),
        ),
      ),
    );
  }

  
  Widget buildTextField(String label, TextEditingController controller) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(label, style: const TextStyle(fontSize: 16)),
        const SizedBox(height: 8),
        TextField(
          controller: controller,
          decoration: InputDecoration(
            hintText: 'Enter your ${label.toLowerCase()}',
            filled: true,
            fillColor: Colors.grey.shade200,
            border: OutlineInputBorder(
              borderRadius: BorderRadius.circular(12),
            ),
          ),
        ),
      ],
    );
  }

  Widget buildTextArea(TextEditingController controller) {
    return TextField(
      controller: controller,
      maxLines: 5,
      decoration: InputDecoration(
        filled: true,
        fillColor: Colors.grey.shade200,
        border: OutlineInputBorder(
          borderRadius: BorderRadius.circular(12),
        ),
      ),
    );
  }
}
